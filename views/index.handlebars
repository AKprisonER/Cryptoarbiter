<div class="jumbotron text-center">
    <h1 class="display-3">...</h1>
    <p class="lead">Jot down ideas for your next YouTube videos</p>
    <a href="/ideas/add" class="btn btn-dark btn-lg">Add Video Idea</a>
</div>

<table id="example" class="table table-striped table-bordered" cellspacing="0" width="100%" class="table table-striped table-bordered"
    style="border-collapse: collapse !important">
    <thead>
        <tr>
            <th>Code</th>
            <th>Bittrex</th>
            <th>Binance</th>
            <th>Poloniex</th>
        </tr>
    </thead>

</table>

<script>
    $(document).ready(function () {
        var table = $('#example').DataTable({
            "ajax": 'http://localhost:5000/tickers',
            responsive: true,
            fixedHeader: true,
            "columns": [
                {
                    "data": "id", "orderable": true,
                },
                {
                    "data": "bittrex.last", "orderable": true, render: function (data, type, row, meta) {

                        if (data == undefined)
                            return "-";

                        var difference = compare(meta, data);

                        if (difference == 1) {
                            return '<span style="color:green">' + data.toFixed(8) + '</span>'
                        }
                        if (difference == 0) {
                            return '<span >' + data.toFixed(8) + '</span>'
                        }
                        if (difference == -1) {
                            return '<span style="color:red">' + data.toFixed(8) + '</span>'
                        }

                    }
                },
                {
                    "data": "binance.last", "orderable": true, render: function (data, type, row, meta) {
                     
                        if (data == undefined)
                            return "-";
                        data = Number(data);
                        var difference = compare(meta, data);

                        if (difference == 1) {
                            return '<span style="color:green">' + data.toFixed(8) + '</span>'
                        }
                        if (difference == 0) {
                            return '<span >' + data.toFixed(8) + '</span>'
                        }
                        if (difference == -1) {
                            return '<span style="color:red">' + data.toFixed(8) + '</span>'
                        }

                    }
                },
                  {
                    "data": "poloniex.last", "orderable": true, render: function (data, type, row, meta) {
                     
                        if (data == undefined)
                            return "-";
                        data = Number(data);
                        var difference = compare(meta, data);

                        if (difference == 1) {
                            return '<span style="color:green">' + data.toFixed(8) + '</span>'
                        }
                        if (difference == 0) {
                            return '<span >' + data.toFixed(8) + '</span>'
                        }
                        if (difference == -1) {
                            return '<span style="color:red">' + data.toFixed(8) + '</span>'
                        }

                    }
                },

            ],
        });
        var prevTable;

        function compare(meta, value) {

            if (prevTable !== undefined) {
                var prev_data;
                if (meta.col == 1) {
                    prev_data = prevTable[meta.row].bittrex;
                }
                else if (meta.col == 2) {
                    prev_data = prevTable[meta.row].binance;
                }
                 else if (meta.col == 3) {
                    prev_data = prevTable[meta.row].poloniex;
                }

                if(prev_data == undefined)
                return 0;
                
                if (prev_data.last < value)
                    return 1;
                else if (prev_data.last == value)
                    return 0;
                else return -1;

            }
            else
                return 0;

        }

        setInterval(function () {
            var json = table.ajax.json();
            prevTable = json.data;
            table.ajax.reload(null, false); // user paging is not reset on reload
        }, 3000);
    });
</script>
<style>
</style>