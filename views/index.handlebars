<div class="jumbotron text-center">
    <h1 class="display-3">...</h1>
    <p class="lead">Jot down ideas for your next YouTube videos</p>
    <a href="/ideas/add" class="btn btn-dark btn-lg">Add Video Idea</a>
</div>
<div>


</div>
<table id="table" class="table table-sm table-striped table-bordered" cellspacing="0" width="100%" style="border-collapse: collapse !important">
    <thead>
        <tr>
            <td colspan="7">
                Exchange: &nbsp;
                <button class="btn btn-sm btn-secondary toggle-vis" data-column="1" onclick="exchange(this)">
                    <i class="far fa-check-square"></i>
                    Bittrex
                </button>
                <button class="btn btn-sm btn-secondary toggle-vis" data-column="2" onclick="exchange(this)">
                    <i class="far fa-check-square"></i>
                    Binance
                </button>
                <button class="btn btn-sm btn-secondary toggle-vis" data-column="3" onclick="exchange(this)">
                    <i class="far fa-check-square"></i>
                    Poloniex
                </button>
                <button class="btn btn-sm btn-secondary toggle-vis" data-column="4" onclick="exchange(this)">
                    <i class="far fa-check-square"></i>
                    Cryptopia
                </button>
                <button class="btn btn-sm btn-secondary toggle-vis" data-column="5" onclick="exchange(this)">
                    <i class="far fa-check-square"></i>
                    Livecoin
                </button>
            </td>
        </tr>
        <tr>
            <th>Code</th>
            <th>Bittrex</th>
            <th>Binance</th>
            <th>Poloniex</th>
            <th>Cryptopia</th>
            <th>Livecoin</th>
            <th>Percentage</th>
        </tr>
    </thead>

</table>

<script>
    $(document).ready(function () {
        var table = $('#table').DataTable({
            "ajax": 'http://localhost:5000/tickers',
            responsive: true,
            fixedHeader: true,
             "order": [[ 6, "desc" ]]

            "columns": [
                {
                    "data": "id", "orderable": true,
                },
                {
                    "data": "bittrex.last", "orderable": true, render: function (data, type, row, meta) {

                        if (data == undefined)
                            return "-";

                        var difference = compare(meta, data);

                        if (difference == 1) {
                            return '<span style="color:green">' + data.toFixed(8) + '</span>'
                        }
                        if (difference == 0) {
                            return '<span >' + data.toFixed(8) + '</span>'
                        }
                        if (difference == -1) {
                            return '<span style="color:red">' + data.toFixed(8) + '</span>'
                        }

                    }
                },
                {
                    "data": "binance.last", "orderable": true, render: function (data, type, row, meta) {

                        if (data == undefined)
                            return "-";
                        data = Number(data);
                        var difference = compare(meta, data);

                        if (difference == 1) {
                            return '<span style="color:green">' + data.toFixed(8) + '</span>'
                        }
                        if (difference == 0) {
                            return '<span >' + data.toFixed(8) + '</span>'
                        }
                        if (difference == -1) {
                            return '<span style="color:red">' + data.toFixed(8) + '</span>'
                        }

                    }
                },
                {
                    "data": "poloniex.last", "orderable": true, render: function (data, type, row, meta) {

                        if (data == undefined)
                            return "-";
                        data = Number(data);
                        var difference = compare(meta, data);

                        if (difference == 1) {
                            return '<span style="color:green">' + data.toFixed(8) + '</span>'
                        }
                        if (difference == 0) {
                            return '<span >' + data.toFixed(8) + '</span>'
                        }
                        if (difference == -1) {
                            return '<span style="color:red">' + data.toFixed(8) + '</span>'
                        }

                    }
                },
                {
                    "data": "cryptopia.last", "orderable": true, render: function (data, type, row, meta) {

                        if (data == undefined)
                            return "-";
                        data = Number(data);
                        var difference = compare(meta, data);

                        if (difference == 1) {
                            return '<span style="color:green">' + data.toFixed(8) + '</span>'
                        }
                        if (difference == 0) {
                            return '<span >' + data.toFixed(8) + '</span>'
                        }
                        if (difference == -1) {
                            return '<span style="color:red">' + data.toFixed(8) + '</span>'
                        }

                    }
                },
                {
                    "data": "livecoin.last", "orderable": true, render: function (data, type, row, meta) {

                        if (data == undefined)
                            return "-";
                        data = Number(data);
                        var difference = compare(meta, data);

                        if (difference == 1) {
                            return '<span style="color:green">' + data.toFixed(8) + '</span>'
                        }
                        if (difference == 0) {
                            return '<span >' + data.toFixed(8) + '</span>'
                        }
                        if (difference == -1) {
                            return '<span style="color:red">' + data.toFixed(8) + '</span>'
                        }

                    }
                },
                {
                    "data": "null", "orderable": true, render: function (data, type, row, meta) {

                        var difference = compare(meta, data);

                        if (difference == 1) {
                            return '<span style="color:green">' + data.toFixed(2) + '</span>'
                        }
                        if (difference == 0) {
                            return '<span >' + data.toFixed(2) + '</span>'
                        }
                        if (difference == -1) {
                            return '<span style="color:red">' + data.toFixed(2) + '</span>'
                        }

                    }
                },

            ],
        });
        var prevTable;

        function compare(meta, value) {

            if (prevTable !== undefined) {
                var prev_data;
                if (meta.col == 1) {
                    prev_data = prevTable[meta.row].bittrex;
                }
                else if (meta.col == 2) {
                    prev_data = prevTable[meta.row].binance;
                }
                else if (meta.col == 3) {
                    prev_data = prevTable[meta.row].poloniex;
                }
                else if (meta.col == 4) {
                    prev_data = prevTable[meta.row].cryptopia;
                }
                else if (meta.col == 5) {
                    prev_data = prevTable[meta.row].livecoin;
                }
                else if (meta.col == 6) {
                    prev_data = prevTable[meta.row].percentage;

                    if (prev_data == undefined)
                        return 0;
                    if (prev_data < value)
                        return 1;
                    else if (prev_data == value)
                        return 0;
                    else return -1;
                }

                if (prev_data == undefined)
                    return 0;

                if (prev_data.last < value)
                    return 1;
                else if (prev_data.last == value)
                    return 0;
                else return -1;

            }
            else
                return 0;

        }

        setInterval(function () {
            var json = table.ajax.json();
            prevTable = json.data;
            table.ajax.reload(null, false); // user paging is not reset on reload
        }, 3000);

        $('button.toggle-vis').on('click', function (e) {
            e.preventDefault();

            // Get the column API object
            var column = table.column($(this).attr('data-column'));

            // Toggle the visibility
            column.visible(!column.visible());
        });

    });


    function exchange(element) {
        var icon = element.children[0];

        element.children[0].classList.toggle('fa-square');
        element.children[0].classList.toggle('fa-check-square');
    }

</script>






{{!-- {
                    "data": "percentage", "orderable": true, render: function (data, type, row, meta) {

                        if (data == undefined)
                            return "-";
                        data = Number(data);
                        var difference = compare(meta, data);

                        if (difference == 1) {
                            return '<span style="color:green">' + data.toFixed(2) + '</span>'
                        }
                        if (difference == 0) {
                            return '<span >' + data.toFixed(2) + '</span>'
                        }
                        if (difference == -1) {
                            return '<span style="color:red">' + data.toFixed(2) + '</span>'
                        }

                    }
                }, --}}